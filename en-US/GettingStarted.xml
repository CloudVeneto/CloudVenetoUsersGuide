<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "Users_Guide.ent">
%BOOK_ENTITIES;
]>
<chapter id="GettingStarted">
<title>Getting Started</title>


<section id="AccessTheCloudThroughTheDashboard">
<title>Access the Cloud through the Dashboard</title>
<para>
Once you have been given an account, you can access the functionality 
provided by the Cloud.
There are several ways of interacting with the Cloud. The simplest one is the 
dashboard, a web based GUI.
</para>



<para>
To access the production service of CloudVeneto via the 
dashboard, you must simply go 
to  <ulink url="https://cloudveneto.ict.unipd.it/dashboard/">https://cloudveneto.ict.unipd.it/dashboard/</ulink> or <ulink url="https://cloud-areapd.pd.infn.it/dashboard/">https://cloud-areapd.pd.infn.it/dashboard/</ulink>
in a browser.
</para>



<mediaobject>
<imageobject>
  <imagedata fileref="./images/dashboard_prod.png" />
</imageobject>
</mediaobject>

<para>
You can now log either using the INFN-AAI credentials, the University of Padova Single Sign On
(SSO) system, or using the username and password.
</para>




</section>


<section id="CreatingAKeypair">
<title>Creating a keypair</title>
<para>
You can now proceed to creating a key-pair. This is a secret key which will 
allow you to interact with your virtual machine once it is created. This key 
should be handled with similar security to a password or an ssh key so it 
should only be stored in a secure directory such as a private area in your 
home folder.
</para>
<para>
The steps are as follows:
</para>
<itemizedlist>
<listitem><para>Open the <menuchoice><guimenu>Compute
</guimenu></menuchoice> tab on the left side</para></listitem>

<listitem><para>Select <menuchoice><guimenu>Key Pairs
</guimenu></menuchoice></para></listitem>

<listitem><para>In the <menuchoice><guimenu>Key Pairs</guimenu></menuchoice> 
section, select <menuchoice><guimenu>Create Key Pair</guimenu></menuchoice>. 
</para></listitem>
</itemizedlist>
<para>
You will need to give the keypair a name, such as 
<replaceable>my_key</replaceable>.</para>


<mediaobject>
<imageobject>
  <imagedata condition="web" fileref="./images/create_keypair.png" />
  <imagedata condition="pdf" fileref="./images/create_keypair.png" width="450" />
</imageobject>
</mediaobject>

<para>
On completion of the operation, a file <replaceable>my_key.pem</replaceable> will be downloaded to your computer.
</para>

<warning><para>
Be careful not to lose the file you just downloaded since there is no easy way to download it again.
</para></warning>

<para>
This file should be stored in a safe location.  To keep it private, run:
<command>
chmod 600 <replaceable>my_key.pem</replaceable>
</command>
</para>

</section>

<section id="ImportingAKeypair">
<title>Importing your keypair</title>
<para>
You might already have an ssh key you use to remotely access machines. This
mean you already have under the <replaceable>.ssh</replaceable> directory in
your home folder a couple of files named <replaceable>id_rsa</replaceable> (or id_dsa)
and <replaceable>id_rsa.pub</replaceable> (or id_dsa.pub). If, on the machine you
want to log on, your id_rsa.pub has been authorized you can access the
machine without providing a password. </para>

<para>Importing your public key allow you to 'inject' it on any newly created
VM in your project.
</para>

<para>
The steps are as follows:
</para>
<itemizedlist>
<listitem><para>Open the <menuchoice><guimenu>Compute
</guimenu></menuchoice> tab on the left side</para></listitem>

<listitem><para>Select <menuchoice><guimenu>Key Pairs
</guimenu></menuchoice></para></listitem>

<listitem><para>In the <menuchoice><guimenu>Key Pairs</guimenu></menuchoice> 
section, select <menuchoice><guimenu>Import Key Pair</guimenu></menuchoice>. 
</para></listitem>
</itemizedlist>
<para>
You will need to give the keypair a name (your full username is a good choice), e.g.
<replaceable>paolomazzon</replaceable>.</para>
<para>On the "Public Key" field paste the content of your id_rsa.pub file</para>

<mediaobject>
<imageobject>
  <imagedata condition="web" fileref="./images/import_keypair.png" />
  <imagedata condition="pdf" fileref="./images/import_keypair.png" width="450" />
</imageobject>
</mediaobject>

<para>
Finally click on the <guimenu>Import Key Pair</guimenu> button
</para>

<warning><para>
Be careful not to paste the content of your private key, the one without the '.pub' extension.
</para></warning>

<para>
You can now use your key pair when instantiating  a VM as an access method.
</para>

</section>


<section id="SecurityGroups">
<title>Setting security group(s)</title>

<para>
Security groups are sets of IP rules (firewall) that define networking access and 
are applied to all instances within a project using that group. As
described in <xref linkend="CreatingVMs"/>, 
when you create an instance you have to specify
the security group to be used.
</para>
<para>
To set such IP rules, users can either add them to the <replaceable>default</replaceable> security group 
or can create a new security group with the desired rules.
</para>

<para>
For example the following procedure enables SSH and ICMP (ping) access to 
the <replaceable>default</replaceable> security group. The rules apply to all instances 
within a given project using this security group, and should be set 
(just once) for every 
project, unless there is a reason to inhibit SSH or ICMP access to the 
instances.</para>

<para>
This procedure can be adjusted as necessary to add additional security group 
rules to a project, if needed.
</para>
<para>
<itemizedlist>

<listitem><para>
Log in to the dashboard, choose a project, and click 
<menuchoice><guimenu>Network</guimenu><guisubmenu>Security Groups</guisubmenu></menuchoice>. The 
security groups that are available for this project are shown.
</para></listitem>

<listitem><para>
Select the <menuchoice><guimenu>default</guimenu></menuchoice> 
security group and click <menuchoice><guimenu>Manage Rules</guimenu></menuchoice>.
</para></listitem>

<listitem><para>
To allow SSH access, click <menuchoice><guimenu>Add Rule</guimenu></menuchoice>.
</para></listitem>
<listitem><para> 
In the Add Rule dialog box, enter the following values:

<informaltable frame="all">
<tgroup cols="2">
<tbody>
    <row><entry>Rule</entry><entry>SSH</entry></row>
    <row><entry>Remote</entry><entry>CIDR</entry></row>
    <row><entry>CIDR</entry><entry>0.0.0.0/0</entry></row>
</tbody>
</tgroup>
</informaltable>



<note><para>
To accept requests from a particular range of IP addresses, specify the IP address block in 
the <menuchoice><guimenu>CIDR</guimenu></menuchoice> box.
</para></note>

</para></listitem>
<listitem><para>
Click <menuchoice><guimenu>Add.</guimenu></menuchoice>
</para></listitem>
</itemizedlist>
</para>

<para>
<itemizedlist>
<listitem><para>
To add an ICMP rule, click <menuchoice><guimenu>Add Rule</guimenu></menuchoice>.
</para></listitem>


<listitem><para>
In the Add Rule dialog box, enter the following values:

<informaltable>
<tgroup cols="2">
<tbody>
    <row><entry>Rule</entry><entry>All ICMP</entry></row>
    <row><entry>Direction</entry><entry>Ingress</entry></row>
    <row><entry>Remote</entry><entry>CIDR</entry></row>
    <row><entry>CIDR</entry><entry>0.0.0.0/0</entry></row>
</tbody>
</tgroup>
</informaltable>

</para></listitem> 

<listitem><para>
Click <menuchoice><guimenu>Add.</guimenu></menuchoice>
</para></listitem>

</itemizedlist>

</para>

<warning><para>
If you need to enable some services on a Virtual Machine, besides setting the
specific IP rules through security groups, be sure that the relevant ports are 
also enabled (e.g. via firewalld) on the Virtual Machine.
</para></warning>

</section>


<section id="PasswordManagement">
<title>Password management</title>

<section id="Foreword">
<title>Foreword</title>
<warning><para>
If you access the cloud either through UniPD SSO or INFN AAI you already
have a password <replaceable>that you cannot change with this procedure.</replaceable>
</para></warning>

<para id="PasswordOnlyIf">
You need to use this procedure only if:
<itemizedlist>
   <listitem><para>
      You access the cloud through username and password and you want to set/change that password;
   </para></listitem>
   <listitem><para>
      You want to use the cloud resources through the command line (see <xref linkend="AccessingtheCloudthroughCLI"/> ).
   </para></listitem>
</itemizedlist>
</para>



</section>

<section id="SettingPassword">
<title>Setting/changing password</title>

<para>
From the OpenStack dashboard click on your user's name (on the top), select 
<menuchoice><guimenu>Settings</guimenu></menuchoice> from the dropdown menu and
then <menuchoice><guimenu>Manage Password</guimenu></menuchoice>.

<mediaobject>
<imageobject>
  <imagedata condition="web" fileref="./images/changepasswd_prod.png" />
  <imagedata condition="pdf" fileref="./images/changepasswd_prod.png" width="450" />
</imageobject>
</mediaobject>

</para>

<important><para>
Once again: this is the password to authenticate with the Cloud "internal" authentication
mechanism. It is uncorrelated from the UniPD SSO or INFN-AAI one.
</para></important>
</section>

</section>


<section id="SwitchingBetweenProjects">
<title>Switching between projects</title>

<para>
As introduced in <xref linkend="Projects"/>,
a user can be on multiple projects at the same time. The current 
project is indicated by the top left dropdown menu near the logo.
</para>

<para>
To switch between projects just open the dropdown menu
(as shown in the following figure) and select one of your available projects.

<mediaobject>
<imageobject>
  <imagedata condition="web" fileref="./images/ProjectSwitch.png" />
  <imagedata condition="pdf" fileref="./images/ProjectSwitch.png" width="450" />
</imageobject>
</mediaobject>

</para>

</section>

<section id="AccessingtheCloudthroughCLI">
<title>Accessing the Cloud with command line tools</title>
<para>
It is possible to manage the Cloud using command line tools, 
even if most of the functionality provided by 
the Cloud can be accessed through the dashboard web interface.
The <ulink url="http://docs.openstack.org/cli-reference/">documentation</ulink> on the OpenStack site
contains extended information on the syntax and installation procedure of the command line tools.
</para>

<note><para>
INFN Padova users can find the OpenStack client installed on lx.pd.infn.it.
</para></note>


<important><para>
Command line tools can only be used with the Cloud "internal" authentication
mechanism. Even if you normally access the cloud dashboard using the UniPD SSO or INFN-AAI
it's now time to <link linkend="PasswordOnlyIf">set a password.</link>
</para></important>

<para>
The OpenStack tools require a set of shell environment variables in order to 
run. These variables can be obtained from the dashboard and then stored in an 'rc' file
that you can source (much like your .profile when logging into a linux server).
</para>

<para>The environment variables are different for project you work on.</para>

<para>If you log into the dashboard, you 
will find <menuchoice><guimenu>API Access</guimenu></menuchoice>
under the <menuchoice><guimenu>Compute</guimenu></menuchoice> menu on the left hand side. 
</para>

<para>
Select among <menuchoice><guimenu>Download OpenStack RC file v2.0</guimenu></menuchoice> and 
<menuchoice><guimenu>Download OpenStack RC file v3</guimenu></menuchoice>, to download the rc file 
for your current project (v2.0 or v3).
The v3 openrc file requires a quite recent version of the Openstack client .
</para>

<mediaobject>
<imageobject>
  <imagedata condition="web" fileref="./images/download_rc.png" />
  <imagedata condition="pdf" fileref="./images/download_rc.png" width="450" />
</imageobject>
</mediaobject>

<warning><para>
Because of a bug, if you downloaded the v2.0 rc file, you have to edit it and replace "v3" with "v2.0" in the OS_AUTH_URL variable setting
</para></warning>


<para>
This file is different for each of the projects you are working on.
</para>

<para>
The downloaded rc file should be 
saved onto the machine you want to run the commands from. If you use 
csh rather than bash/zsh for your shell, you would need to create a new 
version using <replaceable>setenv</replaceable> rather than <replaceable>export</replaceable>.
</para>

<para>
Since the CloudVeneto services are secured using SSL, you will need the
<literal>Digicert.pem</literal> "certification authority" file. This file can be downloaded

<ulink url="https://raw.githubusercontent.com/CloudVeneto/CertCA/master/Digicert.pem">from here.</ulink> 
</para>

<para>Once you get the file you need to edit the RC file to set the
<literal>OS_CACERT</literal> variable like this:

<screen>
export OS_CACERT=/etc/grid-security/certificates/Digicert.pem
</screen>

</para>

<note><para>The certificate can be put anywhere on the client as long as the path
you specify is consistent.</para></note>

<para>
To test it works, source the rc script file and enter your password to 
authenticate. The OpenStack command line tools can then be used, e.g.:
</para>
<screen>
$ . SgaraPrj1-openrc.sh 
Please enter your OpenStack Password for project SgaraPrj1 as user sgaravat@infn.it: 
$ openstack server list
+--------------------------------------+--------------+--------+-------------------------+------------+
| ID                                   | Name         | Status | Networks                | Image Name |
+--------------------------------------+--------------+--------+-------------------------+------------+
| 89088351-90d8-4346-8ecf-ad08750b9d9a | tinies-uno-5 | ACTIVE | SgaraPrj1-lan=10.1.1.4  | cirros     |
| 44d12ad6-cc7e-47c3-a6d5-5e2b7c32d542 | tinies-uno-4 | ACTIVE | SgaraPrj1-lan=10.1.1.17 | cirros     |
| 02a40340-d238-4405-b5f3-3d38d9f9b485 | tinies-uno-3 | ACTIVE | SgaraPrj1-lan=10.1.1.12 | cirros     |
| bc6098c7-6ec6-4ac1-8aee-9e1edb33836a | tinies-uno-2 | ACTIVE | SgaraPrj1-lan=10.1.1.6  | cirros     |
| 1a1ab1b8-a3dd-401d-a8c2-cbd30b02e066 | tinies-uno-1 | ACTIVE | SgaraPrj1-lan=10.1.1.10 | cirros     |
| 4e2c6cc7-bc1c-49a1-951e-10b567247588 | dasgara1-2   | ACTIVE | SgaraPrj1-lan=10.1.1.11 | cirros     |
+--------------------------------------+--------------+--------+-------------------------+------------+
$ 
</screen>

<note><para>
When you source the rc script you are asked for a password. If the 
password is wrong, you will be told (with a generic authentication error) only
when you issue some OpenStack commands.
</para></note>

</section>

<section id="AccessingtheCloudthroughEC2">
<title>Accessing the Cloud through the euca2ools EC2 command line tools</title>
<para>
The CloudVeneto also exposes a EC2 compatible interface, which is a de-facto 
standard for computational clouds.
</para>

<para>
The <literal>euca2ools</literal> are command line tools that can be used to 
interact with an EC2 based cloud.
</para>

<para>You can install the <literal>euca2ools</literal> package on your dekstop as
follows:</para>
<para>CentOS / Fedora
<screen>
  # yum install euca2ools
</screen>
</para>
<para>Ubuntu / Debian
<screen>
  # apt-get install euca2ools
</screen>
</para>


<note>
<para>
INFN-Padova users can find the euca2ools installed on <literal>lx.pd.infn.it</literal>.
</para>
</note>

<para>
The euca2ools require a set of shell environment variables in order to run. 
These environment variables are different per project that you work on.
</para>

<para>If you log into the dashboard, you 
will find <menuchoice><guimenu>API Access</guimenu></menuchoice>
under the <menuchoice><guimenu>Compute</guimenu></menuchoice> menu on the left hand side. 
</para>




<para>
Select the 
<menuchoice><guimenu>Download EC2 Credentials</guimenu></menuchoice> option 
to download the zip file for your current project.
This zip file will be downloaded from the browser. 
</para>


<mediaobject>
<imageobject>
  <imagedata condition="web" fileref="./images/download_rc.png" />
  <imagedata condition="pdf" fileref="./images/download_rc.png" width="450" />
</imageobject>
</mediaobject>


<para>
This file should be saved onto the machine where 
you want to run the commands from, and unzipped into a private directory, e.g:
</para>

<screen>
$ unzip SgaraPrj1-x509.zip 
Archive:  SgaraPrj1-x509.zip
 extracting: pk.pem                  
 extracting: cert.pem                
 extracting: cacert.pem              
 extracting: ec2rc.sh           
</screen>

<para>
ec2rc.sh gives the variables for accessing the Cloud with EC2 APIs. If you 
use a C shell based shell, you would need to adapt this using setenv. 

</para>

<para>
To test it, you can e.g. try the following:
</para>

<screen>
$ . ec2rc.sh 
$ euca-describe-instances -I ${EC2_ACCESS_KEY} -S ${EC2_SECRET_KEY} -U ${EC2_URL}
RESERVATIONr-xvwmks74ee1865a76440481cbcff08544c7d580adefault
INSTANCEi-3b49020eami-2cfcb026tinies-uno-1runningsgaravat-ctest0m1.tiny2018-03-02T12:56:32Znova10.1.1.10instance-storesg-3896bec1
INSTANCEi-ebc7c470ami-2cfcb026tinies-uno-2runningsgaravat-ctest1m1.tiny2018-03-02T12:56:32Znova10.1.1.6instance-storesg-3896bec1
INSTANCEi-bdd57278ami-2cfcb026tinies-uno-3runningsgaravat-ctest2m1.tiny2018-03-02T12:56:32Znova10.1.1.12instance-storesg-3896bec1
INSTANCEi-e5bc209cami-2cfcb026tinies-uno-4runningsgaravat-ctest3m1.tiny2018-03-02T12:56:32Znova10.1.1.17instance-storesg-3896bec1
INSTANCEi-afc80fcdami-2cfcb026tinies-uno-5runningsgaravat-ctest4m1.tiny2018-03-02T12:56:32Znova10.1.1.4instance-storesg-3896bec1
RESERVATIONr-zpz5dkpnee1865a76440481cbcff08544c7d580adefault
INSTANCEi-e93ef61cami-2cfcb026dasgara1-2running1m1.tiny2018-01-16T08:36:44Znova10.1.1.11instance-storesg-3896bec1
$ 
</screen>

<warning>
<para>
For some euca2ools distributions sourcing the ec2rc.sh script is not enough.
You need to explictly specify access and secret keys and the endpoint with the
relevant command line options, e.g.:
<screen>
$ euca-describe-instances -I ${EC2_ACCESS_KEY} -S ${EC2_SECRET_KEY} -U ${EC2_URL}
</screen>
</para>
</warning>

</section>


</chapter>

